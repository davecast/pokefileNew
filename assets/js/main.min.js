(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
require('./components/home/');

},{"./components/home/":7}],2:[function(require,module,exports){
var APPS = [];

var THIRD_PARTY_APPS = [
   'firebase',
   'ngMaterial',
   'LocalStorageModule',
   'templates'
]; 

var DEPENDENCIES = THIRD_PARTY_APPS;
DEPENDENCIES = DEPENDENCIES.concat(APPS);
DEPENDENCIES = DEPENDENCIES.concat(['routes']);

module.exports = DEPENDENCIES;
},{}],3:[function(require,module,exports){
angular.module('routes', ['ngRoute'])

.config(['$routeProvider', '$locationProvider', '$sceProvider', function ($routeProvider, $locationProvider, $sceProvider) {

   $routeProvider.when('/', {
      templateUrl: '/home/view.html',
      controller:  'homeController',
      access: { requiredLogin: false }
   }).otherwise({
      redirectTo: '/'
   });
    $locationProvider.html5Mode({
      enabled: false,
      requireBase: false
    });
   $sceProvider.enabled(false);

}]);

},{}],4:[function(require,module,exports){
var _DEPENDENCIES = require('./app.modules');

var API = 'https://pokeapi.co/api/v2/';
var SPRITE = 'https://play.pokemonshowdown.com/sprites/xyani/';
var APP = angular.module('pokefile', _DEPENDENCIES);

APP.constant('api', {url: API,sprite:SPRITE});

APP.controller('Controller', ['$scope', '$timeout', '$rootScope', function ($scope,$timeout,$rootScope) {
   $rootScope.loadWidth = false;
}]);

module.exports = APP;

},{"./app.modules":2}],5:[function(require,module,exports){
require('./shared/header/');
require('./shared/footer/');
require('./shared/libs/');
require('./shared/filters/');

},{"./shared/filters/":11,"./shared/footer/":14,"./shared/header/":18,"./shared/libs/":22}],6:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.controller('homeController', ['$scope', '$timeout', '$interval', 'homeService', '$rootScope', function ($scope, $timeout, $interval, homeService,$rootScope){
    
    $scope.allPage = [];
    $scope.currentPage = 1;
    $scope.numPerPage = 10;
    $scope.loading = false;
    $scope.pageOn = true;
    
    homeService.allData().then(function(data){
        if (data) {
            $scope.loading = true;
            $scope.allPokemons = data;
            $scope.totalPage = Math.ceil(data.data.count / 20);
            for (var i=0; i< $scope.totalPage; i++) {
                $scope.allPage.push({id:i+1,text: ((i*20)+1)+ '-' + (20+(i*20)),url:'https://pokeapi.co/api/v2/pokemon/?limit=20&offset='+(i*20)});
            }
            $scope.setPage($scope.currentPage);
            $scope.next = data.data.next;
            $scope.prev = data.data.previous;
        }
    });
    //PAGINACION
    $scope.setPage = function(page){
        var start,end;
        $scope.pages = [];
        if(page <= 6){
            start = 1;
            end = 10;
        } else if (page+4 >= $scope.totalPage){
            start = $scope.totalPage - 9;
            end = $scope.totalPage;
        } else {
            start = page - 5;
            end= page + 4;
        }
        
        for(var j = (start-1); j <= (end-1); j++){
            $scope.pages.push($scope.allPage[j]);    
        }
    };
    
    $scope.searchData = function(url,page){
        if($scope.pageOn){
            $scope.pageOn = false;
            $rootScope.loadWidth = true;
            homeService.allData(url).then(function(data){
                if (data){
                    $rootScope.loadWidth = 'complete';
                    var timer = $timeout(function() {$rootScope.loadWidth = 'false'; $timeout.cancel( timer );},2000);
                    $scope.pageOn = true;
                    $scope.allPokemons = data;
                    $scope.next = data.data.next;
                    $scope.prev = data.data.previous;
                    $scope.currentPage = page;
                    $scope.setPage($scope.currentPage);
                }
            });
        } else {
            console.log('Los datos estan cargando...');
        }
    };
}]);

},{"../../app.settings":4}],7:[function(require,module,exports){
require('./service');
require('./controller');
},{"./controller":6,"./service":8}],8:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.factory('homeService', ['$location', '$http', '$q', 'api',
function ($location, $http, $q, api){

  function pokemons(url){
    var quest;
    if(url){
      quest = url;
    }else {
      quest = api.url+'pokemon';
    }
    var deferred = $q.defer();
    $http({
      method: 'get',
      url: quest
    })
    .success(function(data) {
      deferred.resolve(data);
    })
    .error(function(data) {
    });

    return deferred.promise;
  }
  
  function individualData(url){
    var deferred = $q.defer();
    $http({
      method: 'get',
      url: url
    })
    .success(function(data) {
      var id,str,view;
      str = data.id.toString();
      if (data.is_default === true) {
        view = true;
      } else {
        view = true;
      }
  		if (str.length === 1) {
  		    id = "00"+ str;
  		} else if ( str.length === 2) {
  		    id = "0"+ str;
  		} else {
  		    id =  str;
  		}
      var pd = {
        pd: data,
        id: id,
        view: view,
        sprite: api.sprite + data.name+'.gif'
      };
      deferred.resolve(pd);
    })
    .error(function(data) {
    });

    return deferred.promise;
  }
  
  function allData(url){
    var deferred = $q.defer();
    var array = [],customdata;
    pokemons(url).then(function(data){
      for (var i=0; i < data.results.length; i++){
        array.push(individualData(data.results[i].url));
        if (i === data.results.length){
          console.log('hola');
        }
      }
      customdata = {
        pokemon:array,
        data:data
      };
      
      deferred.resolve(customdata);
      
    });
    return deferred.promise;
  }

	return {
    pokemons: pokemons,
    allData: allData,
	};

}]);
},{"../../app.settings":4}],9:[function(require,module,exports){
require('./app.routes');
require('./app.settings');
require('./app.shared');
require('./app.components');
},{"./app.components":1,"./app.routes":3,"./app.settings":4,"./app.shared":5}],10:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.filter('idFormat', ['$filter', function($filter) {
	return function(input) {
	    var id;
	    console.log(input.length);
		if (input.length === 1) {
		    id = "00"+input;
		} else if (input.length === 2) {
		    id = "0"+input;
		} else {
		    id = input;
		}
		return id;
	};
}]);
},{"../../app.settings":4}],11:[function(require,module,exports){
require('./idfilter');
},{"./idfilter":10}],12:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.controller('footerController', ['$scope',
function ($scope) {


}]);

},{"../../app.settings":4}],13:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.directive('setFooter', function(){

	return {
		restrict: 'A',
		template: require('./view.html'),
		controller: 'footerController'
	};

});

},{"../../app.settings":4,"./view.html":15}],14:[function(require,module,exports){
require('./controller');
require('./directive');
},{"./controller":12,"./directive":13}],15:[function(require,module,exports){
module.exports = "<div class=\"footer dc-flex dc-center-center dc-flex-column\"><div class=footer-title>FOOTER</div><div class=footer-figure><div class=footer-powerby>power by</div><figure><img src=\"assets/img/dclogo.png\"></figure></div></div>";

},{}],16:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.controller('headerController', ['$scope', 'tabMenu', '$location', '$anchorScroll',
function ($scope, tabMenu, $location, $anchorScroll) {

	$scope.menu = tabMenu.tabmenu;

	$scope.show = false;
	$scope.toogle = function(){
		$scope.show = !$scope.show;
		console.log($scope.show);
	};

	$scope.onClickTab = function(url){
		tabMenu.onClickTab(url);
		$scope.show = false;
		$location.hash('top');
    	$anchorScroll();
	};

	$scope.isActiveTab = tabMenu.isActiveTab;

}]);

},{"../../app.settings":4}],17:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.directive('setHeader', function(){

	return {
		restrict: 'A',
		template: require('./view.html'),
		controller: 'headerController'
	};

});

},{"../../app.settings":4,"./view.html":20}],18:[function(require,module,exports){
require('./service');
require('./controller');
require('./directive');
},{"./controller":16,"./directive":17,"./service":19}],19:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.factory('tabMenu', ['$location',
function ($location){

	var tabmenu = [
		{
			title: 'ABOUT ME',
			url: '/about'
		},
		{
			title: 'SKILLS',
			url: '/skills'
		},
		{
			title: 'EDUCATION',
			url: '/education'
		},
		{
			title: 'EMPLOYMENT',
			url: '/employment'
		},
		{
			title: 'CONTACT',
			url: '/contact'
		}
	];

	var currentTab = $location.path();

	function onClickTab(url) {
		currentTab = url;
	}

	function isActiveTab(url) {
		return url == currentTab;
	}
	return {
		tabmenu: tabmenu,
		onClickTab: onClickTab,
		isActiveTab: isActiveTab
	};

}]);

},{"../../app.settings":4}],20:[function(require,module,exports){
module.exports = "<div class=header>HEADER</div>";

},{}],21:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.directive('fcSrc', function () {

	function link(scope, element, attrs) {
		var img, loadImage;
		var IMAGE_LOAD;
		$(element[0]).animate({
			opacity: 0
		}, 0, function(){
			IMAGE_LOAD="";
		});
		
		var IMAGE_FAIL="assets/img/preload.gif"; //cambiar a una imagen de error
		img = null;
		
		loadImage = function() {
			element[0].src = IMAGE_LOAD;
			img  = new Image();
			img.src = attrs.fcSrc;
			
			img.onload = function() {
				$(element[0]).animate({opacity: 0}, 500, function(){
					this.src = attrs.fcSrc;
				});
				$(element[0]).animate({opacity: 1}, 500);
			};

			img.onerror=function () {
				element[0].src = IMAGE_FAIL;
			};
		};

    	loadImage();
    }

    return {
        restrict: 'A',
        link:  link
    };
});
},{"../../app.settings":4}],22:[function(require,module,exports){
require('./fssrc');
require('./loader');

},{"./fssrc":21,"./loader":23}],23:[function(require,module,exports){
var _APP = require('../../app.settings');

_APP.directive('dcLoader', function () {

	function link(scope, element, attrs) {
		var intr,sum=0;
		
		attrs.$observe("dcLoader", function( value ) {
			
			if (value === 'true') {
				intr = setInterval(function(){
					
					if (sum >= 50) {
						sum = sum+0.03;
					}else {
						sum = sum+10;
					}
					console.log(sum);
					element[0].style.width = (sum).toString()+"%";
					element[0].style.opacity = 1;
				}, 500);
			} else if (value === 'complete') {
				clearInterval(intr);
				sum = 0;
				element[0].style.width = "100%";
				$('.dc-loader-in').animate({opacity: 0}, 1000);
			} else {
				element[0].style.width = "0%";
			}
        });
		
    }

    return {
        restrict: 'A',
        link:  link
    };
});
},{"../../app.settings":4}]},{},[9])